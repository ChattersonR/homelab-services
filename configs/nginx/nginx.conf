http {
    server {
        listen 8008;

        # Add a trailing slash to every URI.
        # proxy_pass does not work propely if there
        # isn't a trailing slash
        # This also seems to break portainer???
        #rewrite ^([^.]*[^/])$ $1/ permanent;

        #location /portainer/ {
        #    return 301 http://$host:9000/;
        #}

        location = /portainer {
            return 301 http://$host:8008/portainer/;
        }
        location /portainer/ {
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_pass http://localhost:9000/;
        }
        location /portainer/api/websocket/ {
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_http_version 1.1;
            proxy_pass http://localhost:9000/api/websocket/;
        }

        location = /omv {
            #rewrite ^([^.]*[^/])$ $1/ last;
            return 301 http://$host/omv/;
        }
        location /omv/ {
            proxy_set_header Host $host;
            proxy_pass http://localhost:80/;
        }

        location = /rss {
            return 301 http://$host:8008/rss/;
        }
        location /rss/ {
            proxy_set_header Host $host;
            proxy_pass http://localhost:8100/;
        }

        location = /bitwarden {
            return 301 http://$host:8008/bitwarden/;
        }
        location /bitwarden/ {
            proxy_set_header Host $host;
            proxy_pass http://localhost:8080/;
        }

        location /deluge {
            proxy_pass http://localhost:8112/;
            proxy_set_header X-Deluge-Base "/deluge/";
            #include proxy-control.conf;
            add_header X-Frame-Options SAMEORIGIN;
        }

        location = /jellyfin {
            return 302 http://$host:8008/jellyfin/web/;
            #return 302 https://$host/web/;
        }

        location /jellyfin/ {
            # Proxy main Jellyfin traffic
            proxy_pass http://localhost:8096/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Protocol $scheme;
            proxy_set_header X-Forwarded-Host $http_host;

            # Disable buffering when the nginx proxy gets very resource heavy upon streaming
            proxy_buffering off;
        }

        # location block for /web - This is purely for aesthetics so /web/#!/ works instead of having to go to /web/index.html/#!/
        location = /jellyfin/web/ {
            # Proxy main Jellyfin traffic
            proxy_pass http://localhost:8096/web/index.html;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Protocol $scheme;
            proxy_set_header X-Forwarded-Host $http_host;
        }

        location /jellyfin/socket {
            # Proxy Jellyfin Websockets traffic
            proxy_pass http://localhost:8096;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Protocol $scheme;
            proxy_set_header X-Forwarded-Host $http_host;
        }
    }
}

events {}
